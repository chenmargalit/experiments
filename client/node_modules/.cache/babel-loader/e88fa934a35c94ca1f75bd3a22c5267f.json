{"ast":null,"code":"var _jsxFileName = \"/Users/chenmargalit/Desktop/weightWpa/client/src/components/GenericForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button, InputNumber, Radio } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst GenericForm = props => {\n  const dispatch = useDispatch(); // eslint-disable-next-line\n\n  const [exercise, setExercise] = useState(false);\n  const email = useSelector(state => state.users.email); // console.log('email in useSelector', email);\n\n  const onFinish = values => {\n    console.log('values are', values);\n\n    if (email.length > 0) {\n      values.email = email;\n      console.log('values should include email', values);\n    }\n\n    dispatch(props.action(values, props.reDirect));\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const showForm = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      name: \"basic\",\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, props.email && /*#__PURE__*/React.createElement(Form.Item, {\n      type: \"email\",\n      label: \"email\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        type: 'email',\n        message: 'please insert a valid email'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    })), props.password && /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    })), props.confirmPassword && /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    })), props.weight && /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Weight\",\n      name: \"weight\",\n      rules: [{\n        required: true,\n        message: 'Please input weight in numbers'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })), props.comment && /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Comment\",\n      name: \"comment\" // rules={[{ required: true, message: 'Please input your password!' }]}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.TextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    })), props.exercise && /*#__PURE__*/React.createElement(Form.Item, {\n      rules: [{\n        required: true,\n        message: \"We're on to you, say it !\"\n      }],\n      name: \"exercise\",\n      label: \"Did you exercise?\",\n      style: {\n        marginBottom: 20\n      },\n      colon: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Radio.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      value: true,\n      onChange: () => setExercise(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Radio, {\n      value: false,\n      onChange: () => setExercise(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      size: \"large\",\n      style: {\n        borderRadius: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Submit\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 10\n    }\n  }, showForm());\n};\n\nexport default GenericForm;","map":{"version":3,"sources":["/Users/chenmargalit/Desktop/weightWpa/client/src/components/GenericForm.js"],"names":["React","useState","Form","Input","Button","InputNumber","Radio","useDispatch","useSelector","GenericForm","props","dispatch","exercise","setExercise","email","state","users","onFinish","values","console","log","length","action","reDirect","onFinishFailed","errorInfo","showForm","required","type","message","password","confirmPassword","getFieldValue","validator","rule","value","Promise","resolve","reject","weight","comment","marginBottom","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, InputNumber, Radio } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst GenericForm = (props) => {\n  const dispatch = useDispatch();\n  // eslint-disable-next-line\n  const [exercise, setExercise] = useState(false);\n  const email = useSelector((state) => state.users.email);\n  // console.log('email in useSelector', email);\n\n  const onFinish = (values) => {\n    console.log('values are', values);\n    if (email.length > 0) {\n      values.email = email;\n      console.log('values should include email', values);\n    }\n    dispatch(props.action(values, props.reDirect));\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const showForm = () => {\n    return (\n      <div>\n        <Form name='basic' onFinish={onFinish} onFinishFailed={onFinishFailed}>\n          {props.email && (\n            <Form.Item\n              type='email'\n              label='email'\n              name='email'\n              rules={[{ required: true, type: 'email', message: 'please insert a valid email' }]}\n            >\n              <Input />\n            </Form.Item>\n          )}\n\n          {props.password && (\n            <Form.Item\n              label='Password'\n              name='password'\n              rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n              <Input.Password />\n            </Form.Item>\n          )}\n\n          {props.confirmPassword && (\n            <Form.Item\n              name='confirm'\n              label='Confirm Password'\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject('The two passwords that you entered do not match!');\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n          )}\n\n          {props.weight && (\n            <Form.Item\n              label='Weight'\n              name='weight'\n              rules={[{ required: true, message: 'Please input weight in numbers' }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          )}\n\n          {props.comment && (\n            <Form.Item\n              label='Comment'\n              name='comment'\n              // rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          )}\n\n          {props.exercise && (\n            <Form.Item\n              rules={[{ required: true, message: \"We're on to you, say it !\" }]}\n              name='exercise'\n              label='Did you exercise?'\n              style={{ marginBottom: 20 }}\n              colon={false}\n            >\n              <Radio.Group>\n                <Radio value={true} onChange={() => setExercise(true)}>\n                  Yes\n                </Radio>\n                <Radio value={false} onChange={() => setExercise(false)}>\n                  No\n                </Radio>\n              </Radio.Group>\n            </Form.Item>\n          )}\n\n          <Form.Item>\n            <Button type='primary' htmlType='submit' size='large' style={{ borderRadius: '10%' }}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  };\n  return <div>{showForm()}</div>;\n};\n\nexport default GenericForm;\n"]},"metadata":{},"sourceType":"module"}