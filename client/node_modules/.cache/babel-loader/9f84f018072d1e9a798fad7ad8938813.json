{"ast":null,"code":"var _jsxFileName = \"/Users/chenmargalit/Desktop/weightWpa/client/src/components/Form.js\";\nimport React, { useState } from 'react';\nimport { addData } from '../actions/actions';\nimport { Form, Input, Button, Checkbox } from 'antd';\n\nconst MainForm = () => {\n  const layout = {\n    // labelCol: { span: 8 },\n    wrapperCol: {\n      span: 16\n    }\n  };\n  const tailLayout = {// wrapperCol: { offset: 8, span: 16 },\n  };\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const createForm = () => {\n    return /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\" // initialValues={{ remember: true }}\n      ,\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Weight\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Comment\",\n      name: \"comment\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      htmlFor: \"textarea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Remember me\")), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, createForm()));\n};\n\nexport default MainForm; // const MainForm = () => {\n//   const [weight, setWeight] = useState('');\n//   const [comment, setComment] = useState('');\n//   const [exercise, setExercise] = useState(false);\n//   const FormExampleForm = () => (\n//     <Form onSubmit={onSubmit1}>\n//       <Form.Group>\n//         <Form.Label>Weight</Form.Label>\n//         <Form.Control\n//           autoFocus\n//           type='number'\n//           placeholder='Enter weight'\n//           value={weight}\n//           onChange={(e) => setWeight(e.target.value)}\n//         />\n//       </Form.Group>\n//       <Form.Group>\n//         <Form.Label>Comments</Form.Label>\n//         <Form.Control\n//           as='textarea'\n//           type='text'\n//           placeholder='Comments'\n//           value={comment}\n//           onChange={(e) => setComment(e.target.value)}\n//         />\n//       </Form.Group>\n//       <Form.Group></Form.Group>\n//       <Form.Group>\n//         <Form.Label>Did you exercise?</Form.Label>\n//         <Form.Check\n//           type='radio'\n//           placeholder='yes'\n//           label='Yes'\n//           name='exerciseYes'\n//           onChange={(e) => setExercise(true)}\n//           checked={exercise === true}\n//         />\n//         <Form.Check\n//           type='radio'\n//           label='no'\n//           name='excerciseNo'\n//           onChange={(e) => setExercise(false)}\n//           checked={exercise === false}\n//         />\n//       </Form.Group>\n//       <Button variant='primary' type='submit'>\n//         Submit\n//       </Button>\n//     </Form>\n//   );\n//   const onSubmit1 = (e) => {\n//     e.preventDefault();\n//     const data = {\n//       weight,\n//       comment,\n//       exercise,\n//     };\n//     addData(data);\n//   };\n//   return (\n//     console.log('exercise is', exercise),\n//     (\n//       <div style={{ margin: 20 }}>\n//         <div>{FormExampleForm()}</div>\n//       </div>\n//     )\n//   );\n// };\n// export default MainForm;","map":{"version":3,"sources":["/Users/chenmargalit/Desktop/weightWpa/client/src/components/Form.js"],"names":["React","useState","addData","Form","Input","Button","Checkbox","MainForm","layout","wrapperCol","span","tailLayout","onFinish","values","console","log","onFinishFailed","errorInfo","createForm","required","message","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { addData } from '../actions/actions';\n\nimport { Form, Input, Button, Checkbox } from 'antd';\n\nconst MainForm = () => {\n  const layout = {\n    // labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    // wrapperCol: { offset: 8, span: 16 },\n  };\n  const onFinish = (values) => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const createForm = () => {\n    return (\n      <Form\n        {...layout}\n        name='basic'\n        // initialValues={{ remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label='Weight'\n          name='name'\n          rules={[{ required: true, message: 'Please input your username!' }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label='Comment'\n          name='comment'\n          rules={[{ required: true, message: 'Please input your password!' }]}\n          htmlFor='textarea'\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} name='remember' valuePropName='checked'>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type='primary' htmlType='submit'>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  };\n  return (\n    <div>\n      <div style={{ margin: 20 }}>{createForm()}</div>\n    </div>\n  );\n};\n\nexport default MainForm;\n\n// const MainForm = () => {\n//   const [weight, setWeight] = useState('');\n//   const [comment, setComment] = useState('');\n//   const [exercise, setExercise] = useState(false);\n\n//   const FormExampleForm = () => (\n//     <Form onSubmit={onSubmit1}>\n//       <Form.Group>\n//         <Form.Label>Weight</Form.Label>\n//         <Form.Control\n//           autoFocus\n//           type='number'\n//           placeholder='Enter weight'\n//           value={weight}\n//           onChange={(e) => setWeight(e.target.value)}\n//         />\n//       </Form.Group>\n//       <Form.Group>\n//         <Form.Label>Comments</Form.Label>\n//         <Form.Control\n//           as='textarea'\n//           type='text'\n//           placeholder='Comments'\n//           value={comment}\n//           onChange={(e) => setComment(e.target.value)}\n//         />\n//       </Form.Group>\n//       <Form.Group></Form.Group>\n//       <Form.Group>\n//         <Form.Label>Did you exercise?</Form.Label>\n//         <Form.Check\n//           type='radio'\n//           placeholder='yes'\n//           label='Yes'\n//           name='exerciseYes'\n//           onChange={(e) => setExercise(true)}\n//           checked={exercise === true}\n//         />\n//         <Form.Check\n//           type='radio'\n//           label='no'\n//           name='excerciseNo'\n//           onChange={(e) => setExercise(false)}\n//           checked={exercise === false}\n//         />\n//       </Form.Group>\n\n//       <Button variant='primary' type='submit'>\n//         Submit\n//       </Button>\n//     </Form>\n//   );\n\n//   const onSubmit1 = (e) => {\n//     e.preventDefault();\n//     const data = {\n//       weight,\n//       comment,\n//       exercise,\n//     };\n//     addData(data);\n//   };\n//   return (\n//     console.log('exercise is', exercise),\n//     (\n//       <div style={{ margin: 20 }}>\n//         <div>{FormExampleForm()}</div>\n//       </div>\n//     )\n//   );\n// };\n\n// export default MainForm;\n"]},"metadata":{},"sourceType":"module"}