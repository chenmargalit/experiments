{"ast":null,"code":"var _jsxFileName = \"/Users/chenmargalit/Desktop/weightWpa/client/src/components/GenericForm.js\";\nimport React from 'react';\nimport { Form, Input, Button, InputNumber } from 'antd';\nimport { useDispatch } from 'react-redux';\n\nconst GenericForm = props => {\n  const dispatchFunc = useDispatch();\n\n  const onFinish = values => {\n    console.log(values);\n    props.action(dispatchFunc, values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const showForm = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      name: \"basic\",\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      type: \"email\",\n      label: \"email\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        type: 'email',\n        message: 'please insert a valid email'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    })), props.confirm && /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    })), props.weight && /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Weight\",\n      name: \"weight\",\n      rules: [{\n        required: true,\n        message: 'Please input weight in numbers'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })), props.comment && /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Comment\",\n      name: \"comment\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.TextArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      size: \"large\",\n      style: {\n        borderRadius: '10%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"Submit\"))));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Generic form\")), showForm());\n};\n\nexport default GenericForm;","map":{"version":3,"sources":["/Users/chenmargalit/Desktop/weightWpa/client/src/components/GenericForm.js"],"names":["React","Form","Input","Button","InputNumber","useDispatch","GenericForm","props","dispatchFunc","onFinish","values","console","log","action","onFinishFailed","errorInfo","showForm","required","type","message","confirm","getFieldValue","validator","rule","value","Promise","resolve","reject","weight","comment","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, InputNumber } from 'antd';\nimport { useDispatch } from 'react-redux';\n\nconst GenericForm = (props) => {\n  const dispatchFunc = useDispatch();\n  const onFinish = (values) => {\n    console.log(values);\n    props.action(dispatchFunc, values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const showForm = () => {\n    return (\n      <div>\n        <Form name='basic' onFinish={onFinish} onFinishFailed={onFinishFailed}>\n          <Form.Item\n            type='email'\n            label='email'\n            name='email'\n            rules={[{ required: true, type: 'email', message: 'please insert a valid email' }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label='Password'\n            name='password'\n            rules={[{ required: true, message: 'Please input your password!' }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          {props.confirm && (\n            <Form.Item\n              name='confirm'\n              label='Confirm Password'\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject('The two passwords that you entered do not match!');\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n          )}\n\n          {props.weight && (\n            <Form.Item\n              label='Weight'\n              name='weight'\n              rules={[{ required: true, message: 'Please input weight in numbers' }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          )}\n\n          {props.comment && (\n            <Form.Item\n              label='Comment'\n              name='comment'\n              rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          )}\n\n          <Form.Item>\n            <Button type='primary' htmlType='submit' size='large' style={{ borderRadius: '10%' }}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <div>\n        <h2>Generic form</h2>\n      </div>\n      {showForm()}\n    </div>\n  );\n};\n\nexport default GenericForm;\n"]},"metadata":{},"sourceType":"module"}