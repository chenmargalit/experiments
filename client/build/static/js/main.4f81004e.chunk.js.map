{"version":3,"sources":["actions/index.js","actions/types.js","components/Home.js","components/GenericForm.js","components/Form.js","utils/reducerErrorsHandler.js","actions/usersActions.js","components/Signin.js","components/Signup.js","components/Nav.js","App.js","serviceWorker.js","reducers/errorsReducer.js","reducers/dataReducer.js","reducers/usersReducer.js","reducers/successReducer.js","reducers/index.js","index.js"],"names":["addData","data","reDirect","dispatch","a","axios","post","res","console","log","response","getData","token","window","localStorage","getItem","type","payload","Home","useState","loading","setLoading","emoji","st","useSelector","state","errorsFromRedux","errors","error","users","email","useDispatch","useEffect","asyncFunc","showEmo","map","gap_from_yesterday","feeling","length","style","margin","size","className","message","description","rowClassName","record","index","bordered","scroll","pagination","rowKey","Math","random","columns","title","dataIndex","key","dataSource","GenericForm","props","setExercise","setError","onFinish","values","action","onFinishFailed","errorInfo","color","name","Item","label","rules","required","password","Password","confirmPassword","dependencies","hasFeedback","getFieldValue","validator","rule","value","Promise","reject","resolve","weight","comment","TextArea","exercise","marginBottom","colon","Group","onChange","htmlType","borderRadius","MainForm","id","history","push","errorTypeFunc","errorCode","signup","signin","setItem","status","Signin","to","Signup","Nav","mode","selectedKeys","location","pathname","App","path","exact","component","Form","Boolean","hostname","match","errorsReducer","dataReducer","usersReducer","successReducer","combineReducers","success","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4f81004e.chunk.js","sourcesContent":["import axios from 'axios';\nimport { MAIN_ERROR, FETCH_DATA } from './types';\n\nexport const addData = (data, reDirect) => async (dispatch) => {\n  try {\n    const res = await axios.post('http://localhost:5000/create/add_weight', data);\n    console.log(res.data);\n    reDirect('/home');\n  } catch (e) {\n    e.response && console.log(e.response.data);\n  }\n};\n\nexport const getData = () => async (dispatch) => {\n  try {\n    const token = window.localStorage.getItem('token');\n    // const res = await axios('http://localhost:5000/fetch/get_data', {\n    //   method: 'POST',\n    //   headers: { Authorization: `Bearer + ${token}` },\n    // });\n    const res = await axios.post('http://localhost:5000/fetch/get_data', { token });\n\n    dispatch({ type: FETCH_DATA, payload: res.data });\n  } catch (e) {\n    e.response\n      ? dispatch({ type: MAIN_ERROR, payload: e.response.data })\n      : console.log('problem with getData client side', e);\n  }\n};\n","export const FETCH_DATA = 'FETCH_DATA';\nexport const ADD_DATA = 'ADD_DATA';\nexport const SUCCESS = 'SUCCESS';\nexport const USER_AUTH = 'USER_AUTH';\n\nexport const NOT_AUTHORIZED = 'NOT_AUTHORIZED_ERROR';\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const MAIN_ERROR = 'MAIN_ERROR';\nexport const VALIDATION_ERROR = 'VALIDATION_ERROR';\n","import React, { useEffect, useState } from 'react';\nimport { getData } from '../actions/index';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table, Spin, Alert } from 'antd';\nimport './comp.css';\nimport axios from 'axios';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [emoji, setEmoji] = useState('');\n  // const [errors, setErrors] = useState(false);\n  const st = useSelector((state) => state.data);\n  const errorsFromRedux = useSelector((state) => state.errors.error);\n  const userEmailFromRedux = useSelector((state) => state.users.email);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setLoading(true);\n    async function asyncFunc() {\n      // await dispatch(getData(userEmailFromRedux));\n      await dispatch(getData());\n\n      setLoading(false);\n    }\n    asyncFunc();\n  }, [dispatch]);\n\n  const showEmo = async () => {\n    // const rank = st.data.length || 1;\n    // const res = await axios.get(\n    //   `https://mgywp5jk64.execute-api.us-east-1.amazonaws.com/prod/rank?rank=${rank}`\n    // );\n    // console.log('res is', res);\n    // setEmoji(res.data.input);\n    st.data.map((data) => {\n      return data.gap_from_yesterday < 0 ? (data.feeling = '😁') : (data.feeling = '😢');\n    });\n  };\n  st.data && st.data.length > 0 && showEmo() && console.log(st.data);\n\n  const showError = () => {\n    return <Alert message='an Issue has occurred' description={errorsFromRedux} type='error' />;\n  };\n\n  const columns = [\n    {\n      title: 'Date',\n      dataIndex: 'fullDate',\n      key: 'fullDate',\n    },\n    {\n      title: 'Day of week',\n      dataIndex: 'day',\n      key: 'day',\n    },\n    {\n      title: 'Weight',\n      dataIndex: 'weight',\n      key: 'weight',\n    },\n    {\n      title: 'Gap from yesterday',\n      dataIndex: 'gap_from_yesterday',\n      key: 'yesterday_gap',\n    },\n    {\n      title: 'Exercise',\n      dataIndex: 'exercise',\n      key: 'exercise',\n    },\n    {\n      title: 'Gap_from_beginning',\n      dataIndex: 'gap_from_beginning',\n      key: 'beginning_gap',\n    },\n    {\n      title: 'comment',\n      dataIndex: 'comment',\n      key: 'comment',\n    },\n    {\n      title: 'feeling',\n      dataIndex: 'feeling',\n      key: 'feeling',\n    },\n  ];\n\n  return (\n    <div style={{ margin: 30 }}>\n      <h1>Home {emoji}</h1>\n      {loading ? (\n        <Spin size='large' className='spinner' />\n      ) : errorsFromRedux ? (\n        <h1>{showError()}</h1>\n      ) : (\n        <div>\n          {st.data && st.data.length > 0 && (\n            <Table\n              rowClassName={(record, index) => (record.gap_from_yesterday < 0 ? 'lost' : 'gained')}\n              bordered\n              scroll\n              pagination={false}\n              rowKey={(record) => Math.random()}\n              columns={columns}\n              dataSource={st.data}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, InputNumber, Radio } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst GenericForm = (props) => {\n  const dispatch = useDispatch();\n  // eslint-disable-next-line\n  const [exercise, setExercise] = useState(false);\n  const [error, setError] = useState('');\n  const email = useSelector((state) => state.users.email);\n  const errors = useSelector((state) => state.errors.error);\n\n  console.log('errors is', errors);\n\n  useEffect(() => {\n    setError(errors);\n  }, [errors]);\n\n  const onFinish = (values) => {\n    // console.log('values are', values);\n    if (email.length > 0) {\n      values.email = email;\n      // console.log('values should include email', values);\n    }\n    dispatch(props.action(values, props.reDirect));\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n  const showForm = () => {\n    return (\n      <div>\n        <Form name='basic' onFinish={onFinish} onFinishFailed={onFinishFailed}>\n          {props.email && (\n            <Form.Item\n              type='email'\n              label='email'\n              name='email'\n              rules={[{ required: true, type: 'email', message: 'please insert a valid email' }]}\n            >\n              <Input />\n            </Form.Item>\n          )}\n\n          {props.password && (\n            <Form.Item\n              label='Password'\n              name='password'\n              rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n              <Input.Password />\n            </Form.Item>\n          )}\n\n          {props.confirmPassword && (\n            <Form.Item\n              name='confirm'\n              label='Confirm Password'\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject('The two passwords that you entered do not match!');\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n          )}\n\n          {props.weight && (\n            <Form.Item\n              label='Weight'\n              name='weight'\n              rules={[{ required: true, message: 'Please input weight in numbers' }]}\n            >\n              <InputNumber />\n            </Form.Item>\n          )}\n\n          {props.comment && (\n            <Form.Item\n              label='Comment'\n              name='comment'\n              // rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n          )}\n\n          {props.exercise && (\n            <Form.Item\n              rules={[{ required: true, message: \"We're on to you, say it !\" }]}\n              name='exercise'\n              label='Did you exercise?'\n              style={{ marginBottom: 20 }}\n              colon={false}\n            >\n              <Radio.Group>\n                <Radio value={true} onChange={() => setExercise(true)}>\n                  Yes\n                </Radio>\n                <Radio value={false} onChange={() => setExercise(false)}>\n                  No\n                </Radio>\n              </Radio.Group>\n            </Form.Item>\n          )}\n\n          <Form.Item>\n            <Button type='primary' htmlType='submit' size='large' style={{ borderRadius: '10%' }}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <div>\n        {errors && <h3 style={{ color: '#ff4d4f' }}>{errors}</h3>}\n        {showForm()}\n      </div>\n    </div>\n  );\n};\n\nexport default GenericForm;\n","import React from 'react';\nimport GenericForm from './GenericForm';\n// import { useSelector } from 'react-redux';\nimport { addData } from '../actions/index';\n\nconst MainForm = (props) => {\n  // const authUser = useSelector((state) => state.users);\n  return (\n    <div id='abc'>\n      <div>\n        <h1>Enter your data</h1>\n      </div>\n      <GenericForm exercise weight comment action={addData} reDirect={props.history.push} />\n    </div>\n  );\n};\n\nexport default MainForm;\n","import { NOT_AUTHORIZED, MAIN_ERROR } from '../actions/types';\n\nconst errorTypeFunc = (dispatch, errorCode) => {\n  console.log('errorCode is', errorCode);\n  switch (errorCode) {\n    case 401:\n      return dispatch({\n        type: NOT_AUTHORIZED,\n        payload: 'Could not find a user with this password',\n      });\n    case 500:\n      return dispatch({ type: MAIN_ERROR, payload: 'Problem processing request' });\n  }\n};\n\nexport default errorTypeFunc;\n","import { USER_AUTH } from './types';\nimport axios from 'axios';\nimport errorTypeFunc from '../utils/reducerErrorsHandler';\nimport { NOT_AUTHORIZED } from './types';\n\nexport const signup = (data, reDirect) => async (dispatch) => {\n  try {\n    const res = await axios.post('http://localhost:5000/users/signUp', data);\n    const result = res.data;\n    reDirect('/signin');\n  } catch (e) {\n    console.log('problem with signing up on client side', e);\n  }\n};\n\nexport const signin = (data, reDirect) => async (dispatch) => {\n  try {\n    const res = await axios.post('http://localhost:5000/users/signIn', data);\n    window.localStorage.setItem('token', res.data.token);\n    // dispatch({ type: USER_AUTH, payload: res.data.email });\n    reDirect('/home');\n  } catch (e) {\n    if (e.response) {\n      return (\n        console.log('response code', e.response.status), errorTypeFunc(dispatch, e.response.status)\n      );\n    }\n    console.log('problem with signin', e);\n  }\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport GenericForm from './GenericForm';\nimport { signin } from '../actions/usersActions';\n\nconst Signin = (props) => {\n  return (\n    <div style={{ margin: 30 }}>\n      <GenericForm email password action={signin} reDirect={props.history.push} />\n      <h3>\n        Dont have an account ? sign up <NavLink to='/signup'>Here</NavLink>\n      </h3>\n    </div>\n  );\n};\n\nexport default Signin;\n","import React from 'react';\nimport GenericForm from './GenericForm';\nimport { signup } from '../actions/usersActions';\n\nconst Signup = (props) => {\n  return (\n    <div style={{ margin: 20 }}>\n      <h1>Register</h1>\n      <GenericForm email password confirmPassword action={signup} reDirect={props.history.push} />\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Menu } from 'antd';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => {\n  const showNav = () => {\n    return (\n      <Menu mode='horizontal' selectedKeys={window.location.pathname}>\n        <Menu.Item key={'/signin'}>\n          <NavLink to='/signin'>Signin</NavLink>\n          {/* <NavLink to='/signin'>{location != '/signup' ? 'signin' : 'signup'}</NavLink> */}\n        </Menu.Item>\n        <Menu.Item key='/home'>\n          <NavLink to='/home'>Home</NavLink>\n        </Menu.Item>\n        <Menu.Item key='/add-check'>\n          <NavLink to='/add-check'>Add check</NavLink>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  return <div>{showNav()}</div>;\n};\n\nexport default Nav;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Form from './components/Form';\nimport Signin from './components/Signin';\nimport Signup from './components/Signup';\nimport Nav from './components/Nav';\n// import Playground from './components/Playground';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Fragment>\n          <Nav />\n          <Route path='/home' exact component={Home} />\n          <Route path='/add-check' component={Form} />\n          <Route path='/signin' component={Signin} />\n          <Route path='/signup' component={Signup} />\n        </Fragment>\n      </BrowserRouter>\n      {/* <Playground /> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { MAIN_ERROR, NOT_AUTHORIZED } from '../actions/types';\n\nconst errorsReducer = (state = [], action) => {\n  switch (action.type) {\n    case MAIN_ERROR:\n      console.log('reducer - main error');\n      return {\n        ...state,\n        error: action.payload,\n      };\n    case NOT_AUTHORIZED:\n      console.log('reducer - not authorized');\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default errorsReducer;\n","import { ADD_DATA, FETCH_DATA } from '../actions/types';\n\nconst dataReducer = (state = [], action) => {\n  switch (action.type) {\n    case FETCH_DATA:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case ADD_DATA:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { USER_AUTH } from '../actions/types';\n\nconst usersReducer = (state = { email: '' }, action) => {\n  switch (action.type) {\n    case USER_AUTH:\n      console.log('signin working in usersReducer');\n      return {\n        ...state,\n        email: action.payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default usersReducer;\n","import { SUCCESS } from '../actions/types';\n\nconst successReducer = (state = '', action) => {\n  switch (action.type) {\n    case SUCCESS:\n      console.log('some success happened');\n      return {\n        state: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default successReducer;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport data from './dataReducer';\nimport users from './usersReducer';\nimport success from './successReducer';\n\nexport default combineReducers({\n  data,\n  errors,\n  users,\n  success,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport combineReducers from './reducers/index';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nconst store = createStore(combineReducers, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}